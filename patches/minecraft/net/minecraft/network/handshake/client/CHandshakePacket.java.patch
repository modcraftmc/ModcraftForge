--- a/net/minecraft/network/handshake/client/CHandshakePacket.java
+++ b/net/minecraft/network/handshake/client/CHandshakePacket.java
@@ -1,6 +1,11 @@
 package net.minecraft.network.handshake.client;
 
 import java.io.IOException;
+import java.util.Objects;
+
+import com.google.gson.Gson;
+import com.mojang.authlib.properties.Property;
+import fr.modcraftmc.forge.ModcraftEntryPoint;
 import net.minecraft.network.IPacket;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.ProtocolType;
@@ -8,13 +13,19 @@
 import net.minecraft.util.SharedConstants;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import net.minecraftforge.fml.network.FMLNetworkConstants;
+import net.minecraftforge.fml.network.NetworkHooks;
 
 public class CHandshakePacket implements IPacket<IHandshakeNetHandler> {
    private int field_149600_a;
-   private String field_149598_b;
-   private int field_149599_c;
+   public String field_149598_b;
+   public int field_149599_c;
    private ProtocolType field_149597_d;
+   private String fmlVersion = net.minecraftforge.fml.network.FMLNetworkConstants.NETVERSION;
 
+   private static final String EXTRA_DATA = "extraData";
+   private static final Gson GSON = new Gson();
+
    public CHandshakePacket() {
    }
 
@@ -28,14 +39,29 @@
 
    public void func_148837_a(PacketBuffer p_148837_1_) throws IOException {
       this.field_149600_a = p_148837_1_.func_150792_a();
-      this.field_149598_b = p_148837_1_.func_150789_c(255);
+      this.field_149598_b = p_148837_1_.func_150789_c(Short.MAX_VALUE);
       this.field_149599_c = p_148837_1_.readUnsignedShort();
       this.field_149597_d = ProtocolType.func_150760_a(p_148837_1_.func_150792_a());
+      this.fmlVersion = net.minecraftforge.fml.network.NetworkHooks.getFMLVersion(this.field_149598_b);
+      if (ModcraftEntryPoint.bungee && !Objects.equals(this.fmlVersion, FMLNetworkConstants.NETVERSION)) {
+         String[] split = this.field_149598_b.split("\0");
+         if (split.length == 4) {
+            Property[] properties = GSON.fromJson(split[3], Property[].class);
+            for (Property property : properties) {
+               if (Objects.equals(property.getName(), EXTRA_DATA)) {
+                  String extraData = property.getValue().replace("\1", "\0");
+                  this.fmlVersion = NetworkHooks.getFMLVersion(split[0] + extraData);
+                  System.out.println(extraData);
+               }
+            }
+         }
+      }
+      //this.ip = this.ip.split("\0")[0];
    }
 
    public void func_148840_b(PacketBuffer p_148840_1_) throws IOException {
       p_148840_1_.func_150787_b(this.field_149600_a);
-      p_148840_1_.func_180714_a(this.field_149598_b);
+      p_148840_1_.func_180714_a(this.field_149598_b + "\0"+net.minecraftforge.fml.network.FMLNetworkConstants.NETVERSION+"\0");
       p_148840_1_.writeShort(this.field_149599_c);
       p_148840_1_.func_150787_b(this.field_149597_d.func_150759_c());
    }
@@ -51,4 +77,8 @@
    public int func_149595_d() {
       return this.field_149600_a;
    }
+
+   public String getFMLVersion() {
+      return this.fmlVersion;
+   }
 }
