--- a/net/minecraft/block/SpreadableSnowyDirtBlock.java
+++ b/net/minecraft/block/SpreadableSnowyDirtBlock.java
@@ -31,17 +31,20 @@
       return func_220257_b(p_220256_0_, p_220256_1_, p_220256_2_) && !p_220256_1_.func_204610_c(blockpos).func_206884_a(FluidTags.field_206959_a);
    }
 
+   private final BlockPos.Mutable mutablePosition = new BlockPos.Mutable();
+
    public void func_225542_b_(BlockState p_225542_1_, ServerWorld p_225542_2_, BlockPos p_225542_3_, Random p_225542_4_) {
       if (!func_220257_b(p_225542_1_, p_225542_2_, p_225542_3_)) {
+         if (!p_225542_2_.isAreaLoaded(p_225542_3_, 3)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light and spreading
          p_225542_2_.func_175656_a(p_225542_3_, Blocks.field_150346_d.func_176223_P());
       } else {
          if (p_225542_2_.func_201696_r(p_225542_3_.func_177984_a()) >= 9) {
             BlockState blockstate = this.func_176223_P();
 
             for(int i = 0; i < 4; ++i) {
-               BlockPos blockpos = p_225542_3_.func_177982_a(p_225542_4_.nextInt(3) - 1, p_225542_4_.nextInt(5) - 3, p_225542_4_.nextInt(3) - 1);
-               if (p_225542_2_.func_180495_p(blockpos).func_203425_a(Blocks.field_150346_d) && func_220256_c(blockstate, p_225542_2_, blockpos)) {
-                  p_225542_2_.func_175656_a(blockpos, blockstate.func_206870_a(field_196382_a, Boolean.valueOf(p_225542_2_.func_180495_p(blockpos.func_177984_a()).func_203425_a(Blocks.field_150433_aE))));
+               mutablePosition.func_189533_g(p_225542_3_).addValues(p_225542_4_.nextInt(3) - 1, p_225542_4_.nextInt(5) - 3, p_225542_4_.nextInt(3) - 1);
+               if (p_225542_2_.func_180495_p(mutablePosition).func_203425_a(Blocks.field_150346_d) && func_220256_c(blockstate, p_225542_2_, mutablePosition)) {
+                  p_225542_2_.func_175656_a(mutablePosition, blockstate.func_206870_a(field_196382_a, Boolean.valueOf(p_225542_2_.func_180495_p(mutablePosition.func_177984_a()).func_203425_a(Blocks.field_150433_aE))));
                }
             }
          }
