--- a/net/minecraft/world/server/ServerWorld.java
+++ b/net/minecraft/world/server/ServerWorld.java
@@ -6,6 +6,7 @@
 import com.google.common.collect.Maps;
 import com.google.common.collect.Queues;
 import com.google.common.collect.Sets;
+import fr.modcraftforge.forge.ModcraftForge;
 import it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap;
 import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
 import it.unimi.dsi.fastutil.ints.Int2ObjectMap.Entry;
@@ -31,14 +32,13 @@
 import java.util.function.BooleanSupplier;
 import java.util.function.Function;
 import java.util.function.Predicate;
+import java.util.logging.Level;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
-import net.minecraft.block.Block;
-import net.minecraft.block.BlockEventData;
-import net.minecraft.block.BlockState;
-import net.minecraft.block.Blocks;
+
+import net.minecraft.block.*;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityClassification;
@@ -143,14 +143,15 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class ServerWorld extends World implements ISeedReader {
+public class ServerWorld extends World implements ISeedReader, net.minecraftforge.common.extensions.IForgeWorldServer {
    public static final BlockPos field_241108_a_ = new BlockPos(100, 50, 0);
    private static final Logger field_147491_a = LogManager.getLogger();
    private final Int2ObjectMap<Entity> field_217498_x = new Int2ObjectLinkedOpenHashMap<>();
+   final com.tuinity.tuinity.util.maplist.IteratorSafeOrderedReferenceSet<Entity> entitiesForIteration = new com.tuinity.tuinity.util.maplist.IteratorSafeOrderedReferenceSet<>(2048, 0.5f, 2048, 0.2, true); // Tuinity - make removing entities while ticking safe
    private final Map<UUID, Entity> field_175741_N = Maps.newHashMap();
    private final Queue<Entity> field_217499_z = Queues.newArrayDeque();
-   private final List<ServerPlayerEntity> field_217491_A = Lists.newArrayList();
-   private final ServerChunkProvider field_241102_C_;
+   public final List<ServerPlayerEntity> field_217491_A = Lists.newArrayList();
+   public final ServerChunkProvider field_241102_C_;
    boolean field_217492_a;
    private final MinecraftServer field_73061_a;
    private final IServerWorldInfo field_241103_E_;
@@ -173,7 +174,41 @@
    private final DragonFightManager field_241105_O_;
    private final StructureManager field_241106_P_;
    private final boolean field_241107_Q_;
+   private net.minecraftforge.common.util.WorldCapabilityData capabilityData;
 
+   @Override
+   public TileEntity getTileEntity(BlockPos pos, boolean validate) {
+      TileEntity result = super.getTileEntity(pos, validate);
+      if (!validate || Thread.currentThread() != this.field_217407_c) {
+         // SPIGOT-5378: avoid deadlock, this can be called in loading logic (i.e lighting) but getType() will block on chunk load
+         return result;
+      }
+      Block type = func_180495_p(pos).func_177230_c();
+
+      if (result != null && type != Blocks.field_150350_a) {
+         if (!result.func_200662_C().func_223045_a(type)) {
+            result = fixTileEntity(pos, type, result);
+         }
+      }
+
+      return result;
+   }
+
+   private TileEntity fixTileEntity(BlockPos pos, Block type, TileEntity found) {
+      ModcraftForge.LOGGER.warn("Block at {}, {}, {} is {} but has {} " +
+              "ModcraftForge will attempt to fix this, but there may be additional damage that we cannot recover.", pos.func_177958_n(), pos.func_177956_o(), pos.func_177952_p(), type, found);
+
+      //Forge: Do not use, use BlockState.hasTileEntity/Block.createTileEntity
+      if (type.hasTileEntity(type.func_176223_P())) {
+         TileEntity replacement = type.createTileEntity(type.func_176223_P(), this);
+         replacement.field_145850_b = this;
+         this.func_175690_a(pos, replacement);
+         return replacement;
+      } else {
+         return found;
+      }
+   }
+
    public ServerWorld(MinecraftServer p_i241885_1_, Executor p_i241885_2_, SaveFormat.LevelSave p_i241885_3_, IServerWorldInfo p_i241885_4_, RegistryKey<World> p_i241885_5_, DimensionType p_i241885_6_, IChunkStatusListener p_i241885_7_, ChunkGenerator p_i241885_8_, boolean p_i241885_9_, long p_i241885_10_, List<ISpecialSpawner> p_i241885_12_, boolean p_i241885_13_) {
       super(p_i241885_4_, p_i241885_5_, p_i241885_6_, p_i241885_1_::func_213185_aS, false, p_i241885_9_, p_i241885_10_);
       this.field_241107_Q_ = p_i241885_13_;
@@ -200,7 +235,7 @@
       } else {
          this.field_241105_O_ = null;
       }
-
+      this.initCapabilities();
    }
 
    public void func_241113_a_(int p_241113_1_, int p_241113_2_, boolean p_241113_3_, boolean p_241113_4_) {
@@ -296,15 +331,19 @@
          this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q), this.func_234923_W_());
       }
 
+      /* The function in use here has been replaced in order to only send the weather info to players in the correct dimension,
+       * rather than to all players on the server. This is what causes the client-side rain, as the
+       * client believes that it has started raining locally, rather than in another dimension.
+       */
       if (flag != this.func_72896_J()) {
          if (flag) {
-            this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241766_c_, 0.0F));
+            this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241766_c_, 0.0F), this.func_234923_W_());
          } else {
-            this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241765_b_, 0.0F));
+            this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241765_b_, 0.0F), this.func_234923_W_());
          }
 
-         this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, this.field_73004_o));
-         this.field_73061_a.func_184103_al().func_148540_a(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q));
+         this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241771_h_, this.field_73004_o), this.func_234923_W_());
+         this.field_73061_a.func_184103_al().func_232642_a_(new SChangeGameStatePacket(SChangeGameStatePacket.field_241772_i_, this.field_73017_q), this.func_234923_W_());
       }
 
       if (this.field_73068_P && this.field_217491_A.stream().noneMatch((p_241132_0_) -> {
@@ -312,8 +351,8 @@
       })) {
          this.field_73068_P = false;
          if (this.func_82736_K().func_223586_b(GameRules.field_223607_j)) {
-            long l = this.field_72986_A.func_76073_f() + 24000L;
-            this.func_241114_a_(l - l % 24000L);
+            long l = this.func_72820_D() + 24000L;
+            this.func_241114_a_(net.minecraftforge.event.ForgeEventFactory.onSleepFinished(this, l - l % 24000L, this.func_72820_D()));
          }
 
          this.func_229856_ab_();
@@ -338,7 +377,7 @@
       this.func_147488_Z();
       this.field_211159_Q = false;
       iprofiler.func_219895_b("entities");
-      boolean flag3 = !this.field_217491_A.isEmpty() || !this.func_217469_z().isEmpty();
+      boolean flag3 = !this.field_217491_A.isEmpty() || net.minecraftforge.common.world.ForgeChunkManager.hasForcedChunks(this); //Forge: Replace vanilla's has forced chunk check with forge's that checks both the vanilla and forge added ones
       if (flag3) {
          this.func_82742_i();
       }
@@ -349,71 +388,141 @@
          }
 
          this.field_217492_a = true;
-         ObjectIterator<Entry<Entity>> objectiterator = this.field_217498_x.int2ObjectEntrySet().iterator();
+         com.tuinity.tuinity.util.maplist.IteratorSafeOrderedReferenceSet.Iterator<Entity> objectiterator = this.entitiesForIteration.iterator(); // Tuinity
 
+         org.spigotmc.ActivationRange.activateEntities(this); // Spigot
+         //timings.entityTick.startTiming(); // Spigot
+         while (objectiterator.hasNext()) {
+            Entity entity = (Entity) objectiterator.next(); // Tuinity
+            Entity entity1 = entity.func_184187_bx();
+
+            iprofiler.func_76320_a("checkDespawn");
+            if (!entity.field_70128_L) {
+               entity.func_70623_bb();
+            }
+
+            iprofiler.func_76319_b();
+            if (entity1 != null) {
+               if (!entity1.field_70128_L && entity1.func_184196_w(entity)) {
+                  continue;
+               }
+
+               entity.func_184210_p();
+            }
+
+            iprofiler.func_76320_a("tick");
+            if (!entity.field_70128_L && !(entity instanceof net.minecraftforge.entity.PartEntity)) {
+               // Airplane start - inline this.a to prevent creation of lambda
+                    /*
+                    this.a(this::entityJoinedWorld, entity);
+                     */
+               try {
+                  this.func_217390_a(this::func_217479_a, entity);
+               } catch (Throwable throwable) {
+                  if (throwable instanceof ThreadDeath) throw throwable; // Paper
+                  // Paper start - Prevent tile entity and entity crashes
+                  String msg = "Entity threw exception at " + entity.toString() + ":" + entity.func_226277_ct_() + "," + entity.func_226278_cu_() + "," + entity.func_226281_cx_();
+                  System.err.println(msg);
+                  throwable.printStackTrace();
+                  entity.field_70128_L = true;
+                  // Paper end
+               }
+            }
+
+            iprofiler.func_76319_b();
+            iprofiler.func_76320_a("remove");
+            if (entity.field_70128_L) {
+               this.func_217454_n(entity);
+               this.field_217498_x.remove(entity.func_145782_y()); // Tuinity
+               this.removeEntityComplete(entity, entity instanceof ServerPlayerEntity);
+            }
+
+            iprofiler.func_76319_b();
+         }
+
+         objectiterator.finishedIterating(); // Tuinity
+         this.field_217492_a = false;
+         // Tuinity - replace logic
+
+         Entity entity2;
+
+         while ((entity2 = (Entity) this.field_217499_z.poll()) != null) {
+            if (!entity2.isQueuedForRegister) continue; // Paper - ignore cancelled registers
+            this.func_217465_m(entity2);
+         }
+
+         //timings.tickEntities.stopTiming(); // Spigot
+         // Tuinity - replace logic
+         this.func_217391_K();
+
+         iprofiler.func_76319_b();
+      }
+         /*
+         ObjectIterator<Entry<Entity>> objectiterator = this.entitiesById.int2ObjectEntrySet().iterator();
+
          label164:
          while(true) {
             Entity entity1;
             while(true) {
                if (!objectiterator.hasNext()) {
-                  this.field_217492_a = false;
+                  this.tickingEntities = false;
 
                   Entity entity;
-                  while((entity = this.field_217499_z.poll()) != null) {
-                     this.func_217465_m(entity);
+                  while((entity = this.entitiesToAdd.poll()) != null) {
+                     this.onEntityAdded(entity);
                   }
 
-                  this.func_217391_K();
+                  this.tickBlockEntities();
                   break label164;
                }
 
                Entry<Entity> entry = objectiterator.next();
                entity1 = entry.getValue();
-               Entity entity2 = entity1.func_184187_bx();
-               if (!this.field_73061_a.func_230537_U_() && (entity1 instanceof AnimalEntity || entity1 instanceof WaterMobEntity)) {
-                  entity1.func_70106_y();
+               Entity entity2 = entity1.getRidingEntity();
+               if (!this.server.func_230537_U_() && (entity1 instanceof AnimalEntity || entity1 instanceof WaterMobEntity)) {
+                  entity1.remove();
                }
 
-               if (!this.field_73061_a.func_230538_V_() && entity1 instanceof INPC) {
-                  entity1.func_70106_y();
+               if (!this.server.func_230538_V_() && entity1 instanceof INPC) {
+                  entity1.remove();
                }
 
-               iprofiler.func_76320_a("checkDespawn");
-               if (!entity1.field_70128_L) {
-                  entity1.func_70623_bb();
+               iprofiler.startSection("checkDespawn");
+               if (!entity1.removed) {
+                  entity1.checkDespawn();
                }
 
-               iprofiler.func_76319_b();
+               iprofiler.endSection();
                if (entity2 == null) {
                   break;
                }
 
-               if (entity2.field_70128_L || !entity2.func_184196_w(entity1)) {
-                  entity1.func_184210_p();
+               if (entity2.removed || !entity2.isPassenger(entity1)) {
+                  entity1.stopRiding();
                   break;
                }
             }
 
-            iprofiler.func_76320_a("tick");
-            if (!entity1.field_70128_L && !(entity1 instanceof EnderDragonPartEntity)) {
-               this.func_217390_a(this::func_217479_a, entity1);
+            iprofiler.startSection("tick");
+            if (!entity1.removed && !(entity1 instanceof net.minecraftforge.entity.PartEntity)) {
+               this.guardEntityTick(this::updateEntity, entity1);
             }
 
-            iprofiler.func_76319_b();
-            iprofiler.func_76320_a("remove");
-            if (entity1.field_70128_L) {
-               this.func_217454_n(entity1);
+            iprofiler.endSection();
+            iprofiler.startSection("remove");
+            if (entity1.removed) {
+               this.removeFromChunk(entity1);
                objectiterator.remove();
-               this.func_217484_g(entity1);
+               this.removeEntityComplete(entity1, entity1 instanceof ServerPlayerEntity); //Forge: Keep cap data until revive. Every other entity removes directly.
             }
 
-            iprofiler.func_76319_b();
+            iprofiler.endSection();
          }
-      }
 
-      iprofiler.func_76319_b();
-   }
+          */
 
+ }
+
    protected void func_241126_b_() {
       if (this.field_241107_Q_) {
          long i = this.field_72986_A.func_82573_f() + 1L;
@@ -443,6 +552,13 @@
       });
    }
 
+   // Paper start - optimise random block ticking
+   private final BlockPos.Mutable chunkTickMutablePosition = new BlockPos.Mutable();
+   private final com.destroystokyo.paper.util.math.ThreadUnsafeRandom randomTickRandom = new com.destroystokyo.paper.util.math.ThreadUnsafeRandom();
+
+   private int currentIceAndSnowTick = 0; protected void resetIceAndSnowTick() { this.currentIceAndSnowTick = this.randomTickRandom.nextInt(16); } // Airplane
+   // Paper end
+
    public void func_217441_a(Chunk p_217441_1_, int p_217441_2_) {
       ChunkPos chunkpos = p_217441_1_.func_76632_l();
       boolean flag = this.func_72896_J();
@@ -450,21 +566,23 @@
       int j = chunkpos.func_180333_d();
       IProfiler iprofiler = this.func_217381_Z();
       iprofiler.func_76320_a("thunder");
+      final BlockPos.Mutable blockposition = this.chunkTickMutablePosition; // Paper - use mutable to reduce allocation rate, final to force compile fail on change
+
       if (flag && this.func_72911_I() && this.field_73012_v.nextInt(100000) == 0) {
-         BlockPos blockpos = this.func_175736_a(this.func_217383_a(i, 0, j, 15));
-         if (this.func_175727_C(blockpos)) {
-            DifficultyInstance difficultyinstance = this.func_175649_E(blockpos);
+         blockposition.func_189533_g(this.func_175736_a(this.func_217383_a(i, 0, j, 15)));
+         if (this.func_175727_C(blockposition)) {
+            DifficultyInstance difficultyinstance = this.func_175649_E(blockposition);
             boolean flag1 = this.func_82736_K().func_223586_b(GameRules.field_223601_d) && this.field_73012_v.nextDouble() < (double)difficultyinstance.func_180168_b() * 0.01D;
             if (flag1) {
                SkeletonHorseEntity skeletonhorseentity = EntityType.field_200742_ah.func_200721_a(this);
                skeletonhorseentity.func_190691_p(true);
                skeletonhorseentity.func_70873_a(0);
-               skeletonhorseentity.func_70107_b((double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p());
+               skeletonhorseentity.func_70107_b((double)blockposition.func_177958_n(), (double)blockposition.func_177956_o(), (double)blockposition.func_177952_p());
                this.func_217376_c(skeletonhorseentity);
             }
 
             LightningBoltEntity lightningboltentity = EntityType.field_200728_aG.func_200721_a(this);
-            lightningboltentity.func_233576_c_(Vector3d.func_237492_c_(blockpos));
+            lightningboltentity.func_233576_c_(Vector3d.func_237492_c_(blockposition));
             lightningboltentity.func_233623_a_(flag1);
             this.func_217376_c(lightningboltentity);
          }
@@ -472,19 +590,31 @@
 
       iprofiler.func_219895_b("iceandsnow");
       if (this.field_73012_v.nextInt(16) == 0) {
-         BlockPos blockpos2 = this.func_205770_a(Heightmap.Type.MOTION_BLOCKING, this.func_217383_a(i, 0, j, 15));
-         BlockPos blockpos3 = blockpos2.func_177977_b();
-         Biome biome = this.func_226691_t_(blockpos2);
-         if (biome.func_201848_a(this, blockpos3)) {
-            this.func_175656_a(blockpos3, Blocks.field_150432_aD.func_176223_P());
+         // Paper start - optimise chunk ticking
+         this.getRandomBlockPosition(i, 0, j, 15, blockposition);
+         int normalY = p_217441_1_.getHighestBlockY(Heightmap.Type.MOTION_BLOCKING, blockposition.func_177958_n() & 15, blockposition.func_177952_p() & 15);
+         int downY = normalY - 1;
+         blockposition.func_185336_p(normalY);
+         // Paper end
+         /*
+         BlockPos blockpos2 = this.getHeight(Heightmap.Type.MOTION_BLOCKING, this.getBlockRandomPos(i, 0, j, 15));
+         BlockPos blockpos3 = blockpos2.down();
+          */
+         Biome biome = this.func_226691_t_(blockposition);
+         blockposition.func_185336_p(downY);
+         if (this.isAreaLoaded(blockposition, 1)) // Forge: check area to avoid loading neighbors in unloaded chunks
+         if (biome.func_201848_a(this, blockposition)) {
+            this.func_175656_a(blockposition, Blocks.field_150432_aD.func_176223_P());
          }
 
-         if (flag && biome.func_201850_b(this, blockpos2)) {
-            this.func_175656_a(blockpos2, Blocks.field_150433_aE.func_176223_P());
+         blockposition.func_185336_p(normalY); // Paper
+         if (flag && biome.func_201850_b(this, blockposition)) {
+            this.func_175656_a(blockposition, Blocks.field_150433_aE.func_176223_P());
          }
 
-         if (flag && this.func_226691_t_(blockpos3).func_201851_b() == Biome.RainType.RAIN) {
-            this.func_180495_p(blockpos3).func_177230_c().func_176224_k(this, blockpos3);
+         blockposition.func_185336_p(downY);
+         if (flag && this.func_226691_t_(blockposition).func_201851_b() == Biome.RainType.RAIN) {
+            this.func_180495_p(blockposition).func_177230_c().func_176224_k(this, blockposition);
          }
       }
 
@@ -499,12 +629,12 @@
                   iprofiler.func_76320_a("randomTick");
                   BlockState blockstate = chunksection.func_177485_a(blockpos1.func_177958_n() - i, blockpos1.func_177956_o() - k, blockpos1.func_177952_p() - j);
                   if (blockstate.func_204519_t()) {
-                     blockstate.func_227034_b_(this, blockpos1, this.field_73012_v);
+                     blockstate.func_227034_b_(this, blockpos1, this.randomTickRandom);
                   }
 
                   FluidState fluidstate = blockstate.func_204520_s();
                   if (fluidstate.func_206890_h()) {
-                     fluidstate.func_206891_b(this, blockpos1, this.field_73012_v);
+                     fluidstate.func_206891_b(this, blockpos1, this.randomTickRandom);
                   }
 
                   iprofiler.func_76319_b();
@@ -591,17 +721,28 @@
       if (!(p_217479_1_ instanceof PlayerEntity) && !this.func_72863_F().func_217204_a(p_217479_1_)) {
          this.func_217464_b(p_217479_1_);
       } else {
+         final boolean isActive = org.spigotmc.ActivationRange.checkIfActive(p_217479_1_);
          p_217479_1_.func_226286_f_(p_217479_1_.func_226277_ct_(), p_217479_1_.func_226278_cu_(), p_217479_1_.func_226281_cx_());
          p_217479_1_.field_70126_B = p_217479_1_.field_70177_z;
          p_217479_1_.field_70127_C = p_217479_1_.field_70125_A;
          if (p_217479_1_.field_70175_ag) {
             ++p_217479_1_.field_70173_aa;
             IProfiler iprofiler = this.func_217381_Z();
-            iprofiler.func_194340_a(() -> {
-               return Registry.field_212629_r.func_177774_c(p_217479_1_.func_200600_R()).toString();
+            // Airplane start - create debug lambda once, todo do we even WANT the method profiler?
+            /*
+            iprofiler.startSection(() -> {
+               return entityIn.getType().getRegistryName() == null ? entityIn.getType().toString() : entityIn.getType().getRegistryName().toString();
             });
+            */
+            iprofiler.func_194340_a(p_217479_1_.func_200600_R().getEntityName);
+
             iprofiler.func_230035_c_("tickNonPassenger");
-            p_217479_1_.func_70071_h_();
+            if (isActive) {
+               if (p_217479_1_.canUpdate())
+                  p_217479_1_.func_70071_h_();
+            } else {
+               p_217479_1_.inactiveTick();
+            }
             iprofiler.func_76319_b();
          }
 
@@ -618,6 +759,7 @@
    public void func_217459_a(Entity p_217459_1_, Entity p_217459_2_) {
       if (!p_217459_2_.field_70128_L && p_217459_2_.func_184187_bx() == p_217459_1_) {
          if (p_217459_2_ instanceof PlayerEntity || this.func_72863_F().func_217204_a(p_217459_2_)) {
+            final boolean isActive = org.spigotmc.ActivationRange.checkIfActive(p_217459_2_);
             p_217459_2_.func_226286_f_(p_217459_2_.func_226277_ct_(), p_217459_2_.func_226278_cu_(), p_217459_2_.func_226281_cx_());
             p_217459_2_.field_70126_B = p_217459_2_.field_70177_z;
             p_217459_2_.field_70127_C = p_217459_2_.field_70125_A;
@@ -628,8 +770,15 @@
                   return Registry.field_212629_r.func_177774_c(p_217459_2_.func_200600_R()).toString();
                });
                iprofiler.func_230035_c_("tickPassenger");
-               p_217459_2_.func_70098_U();
-               iprofiler.func_76319_b();
+
+               if (isActive) {
+                  p_217459_2_.func_70098_U();
+                  iprofiler.func_76319_b();
+               } else {
+                  p_217459_2_.func_213317_d(Vector3d.field_186680_a);
+                  p_217459_2_.inactiveTick();
+                  p_217459_1_.func_184232_k(p_217459_2_);
+               }
             }
 
             this.func_217464_b(p_217459_2_);
@@ -687,6 +836,7 @@
             p_217445_1_.func_200209_c(new TranslationTextComponent("menu.savingChunks"));
          }
 
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Save(this));
          serverchunkprovider.func_217210_a(p_217445_2_);
       }
    }
@@ -777,6 +927,7 @@
    }
 
    private void func_217448_f(ServerPlayerEntity p_217448_1_) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_217448_1_, this))) return;
       Entity entity = this.field_175741_N.get(p_217448_1_.func_110124_au());
       if (entity != null) {
          field_147491_a.warn("Force-added player with duplicate UUID {}", (Object)p_217448_1_.func_110124_au().toString());
@@ -801,6 +952,7 @@
       } else if (this.func_217478_l(p_72838_1_)) {
          return false;
       } else {
+         if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_72838_1_, this))) return false;
          IChunk ichunk = this.func_217353_a(MathHelper.func_76128_c(p_72838_1_.func_226277_ct_() / 16.0D), MathHelper.func_76128_c(p_72838_1_.func_226281_cx_() / 16.0D), ChunkStatus.field_222617_m, p_72838_1_.field_98038_p);
          if (!(ichunk instanceof Chunk)) {
             return false;
@@ -816,6 +968,7 @@
       if (this.func_217478_l(p_217440_1_)) {
          return false;
       } else {
+         if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_217440_1_, this))) return false;
          this.func_217465_m(p_217440_1_);
          return true;
       }
@@ -867,7 +1020,7 @@
       for(int j = 0; j < i; ++j) {
          for(Entity entity : aclassinheritancemultimap[j]) {
             if (!(entity instanceof ServerPlayerEntity)) {
-               if (this.field_217492_a) {
+               if (false && this.field_217492_a) {
                   throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
                }
 
@@ -879,12 +1032,17 @@
 
    }
 
+   @Deprecated //Forge: Use removeEntityComplete(entity,boolean)
    public void func_217484_g(Entity p_217484_1_) {
-      if (p_217484_1_ instanceof EnderDragonEntity) {
-         for(EnderDragonPartEntity enderdragonpartentity : ((EnderDragonEntity)p_217484_1_).func_213404_dT()) {
-            enderdragonpartentity.func_70106_y();
+      removeEntityComplete(p_217484_1_, false);
+   }
+   public void removeEntityComplete(Entity p_217484_1_, boolean keepData) {
+      if (p_217484_1_.isMultipartEntity()) {
+         for(net.minecraftforge.entity.PartEntity<?> enderdragonpartentity : p_217484_1_.getParts()) {
+            enderdragonpartentity.remove(keepData);
          }
       }
+      p_217484_1_.remove(keepData);
 
       this.field_175741_N.remove(p_217484_1_.func_110124_au());
       this.func_72863_F().func_217226_b(p_217484_1_);
@@ -898,15 +1056,23 @@
          this.field_217495_I.remove(((MobEntity)p_217484_1_).func_70661_as());
       }
 
+      p_217484_1_.onRemovedFromWorld();
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityLeaveWorldEvent(p_217484_1_, this));
    }
 
    private void func_217465_m(Entity p_217465_1_) {
-      if (this.field_217492_a) {
-         this.field_217499_z.add(p_217465_1_);
+      if (false && this.field_217492_a) { /// Tuinity
+         if (!p_217465_1_.isQueuedForRegister) {
+            this.field_217499_z.add(p_217465_1_);
+            p_217465_1_.isQueuedForRegister = true;
+         }
       } else {
+         p_217465_1_.isQueuedForRegister = false;
          this.field_217498_x.put(p_217465_1_.func_145782_y(), p_217465_1_);
-         if (p_217465_1_ instanceof EnderDragonEntity) {
-            for(EnderDragonPartEntity enderdragonpartentity : ((EnderDragonEntity)p_217465_1_).func_213404_dT()) {
+         this.entitiesForIteration.add(p_217465_1_);
+         if (p_217465_1_.isMultipartEntity()) {
+            for(net.minecraftforge.entity.PartEntity<?> enderdragonpartentity : p_217465_1_.getParts()) {
+               this.entitiesForIteration.add(enderdragonpartentity);
                this.field_217498_x.put(enderdragonpartentity.func_145782_y(), enderdragonpartentity);
             }
          }
@@ -918,29 +1084,43 @@
          }
       }
 
+      p_217465_1_.onAddedToWorld();
    }
 
    public void func_217467_h(Entity p_217467_1_) {
-      if (this.field_217492_a) {
+      removeEntity(p_217467_1_, false);
+   }
+   public void removeEntity(Entity p_217467_1_, boolean keepData) {
+      if (false && this.field_217492_a) {
          throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException("Removing entity while ticking!"));
       } else {
          this.func_217454_n(p_217467_1_);
          this.field_217498_x.remove(p_217467_1_.func_145782_y());
-         this.func_217484_g(p_217467_1_);
+         this.entitiesForIteration.remove(p_217467_1_);
+         this.removeEntityComplete(p_217467_1_, keepData);
       }
    }
 
    private void func_217454_n(Entity p_217454_1_) {
-      IChunk ichunk = this.func_217353_a(p_217454_1_.field_70176_ah, p_217454_1_.field_70164_aj, ChunkStatus.field_222617_m, false);
-      if (ichunk instanceof Chunk) {
-         ((Chunk)ichunk).func_76622_b(p_217454_1_);
+      //IChunk ichunk = this.getChunk(entityIn.chunkCoordX, entityIn.chunkCoordZ, ChunkStatus.FULL, false);
+      Chunk chunk = p_217454_1_.getCurrentChunk();
+
+      if (chunk != null) {
+         chunk.func_76622_b(p_217454_1_);
       }
 
+      //if (ichunk instanceof Chunk) {
+      //   ((Chunk)ichunk).removeEntity(entityIn);
+      //}
+
    }
 
    public void func_217434_e(ServerPlayerEntity p_217434_1_) {
-      p_217434_1_.func_70106_y();
-      this.func_217467_h(p_217434_1_);
+      removePlayer(p_217434_1_, false);
+   }
+   public void removePlayer(ServerPlayerEntity p_217434_1_, boolean keepData) {
+      p_217434_1_.remove(keepData);
+      this.removeEntity(p_217434_1_, keepData);
       this.func_72854_c();
    }
 
@@ -959,10 +1139,20 @@
    }
 
    public void func_184148_a(@Nullable PlayerEntity p_184148_1_, double p_184148_2_, double p_184148_4_, double p_184148_6_, SoundEvent p_184148_8_, SoundCategory p_184148_9_, float p_184148_10_, float p_184148_11_) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(p_184148_1_, p_184148_8_, p_184148_9_, p_184148_10_, p_184148_11_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_184148_8_ = event.getSound();
+      p_184148_9_ = event.getCategory();
+      p_184148_10_ = event.getVolume();
       this.field_73061_a.func_184103_al().func_148543_a(p_184148_1_, p_184148_2_, p_184148_4_, p_184148_6_, p_184148_10_ > 1.0F ? (double)(16.0F * p_184148_10_) : 16.0D, this.func_234923_W_(), new SPlaySoundEffectPacket(p_184148_8_, p_184148_9_, p_184148_2_, p_184148_4_, p_184148_6_, p_184148_10_, p_184148_11_));
    }
 
    public void func_217384_a(@Nullable PlayerEntity p_217384_1_, Entity p_217384_2_, SoundEvent p_217384_3_, SoundCategory p_217384_4_, float p_217384_5_, float p_217384_6_) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(p_217384_1_, p_217384_3_, p_217384_4_, p_217384_5_, p_217384_6_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_217384_3_ = event.getSound();
+      p_217384_4_ = event.getCategory();
+      p_217384_5_ = event.getVolume();
       this.field_73061_a.func_184103_al().func_148543_a(p_217384_1_, p_217384_2_.func_226277_ct_(), p_217384_2_.func_226278_cu_(), p_217384_2_.func_226281_cx_(), p_217384_5_ > 1.0F ? (double)(16.0F * p_217384_5_) : 16.0D, this.func_234923_W_(), new SSpawnMovingSoundEffectPacket(p_217384_3_, p_217384_4_, p_217384_2_, p_217384_5_, p_217384_6_));
    }
 
@@ -998,6 +1188,7 @@
 
    public Explosion func_230546_a_(@Nullable Entity p_230546_1_, @Nullable DamageSource p_230546_2_, @Nullable ExplosionContext p_230546_3_, double p_230546_4_, double p_230546_6_, double p_230546_8_, float p_230546_10_, boolean p_230546_11_, Explosion.Mode p_230546_12_) {
       Explosion explosion = new Explosion(this, p_230546_1_, p_230546_2_, p_230546_3_, p_230546_4_, p_230546_6_, p_230546_8_, p_230546_10_, p_230546_11_, p_230546_12_);
+      if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
       explosion.func_77278_a();
       explosion.func_77279_a(false);
       if (p_230546_12_ == Explosion.Mode.NONE) {
@@ -1410,4 +1601,14 @@
          p_241121_0_.func_175656_a(p_241122_1_, Blocks.field_150343_Z.func_176223_P());
       });
    }
+
+   protected void initCapabilities() {
+      this.gatherCapabilities();
+      capabilityData = this.func_217481_x().func_215752_a(() -> new net.minecraftforge.common.util.WorldCapabilityData(getCapabilities()), net.minecraftforge.common.util.WorldCapabilityData.ID);
+      capabilityData.setCapabilities(getCapabilities());
+   }
+
+   public java.util.stream.Stream<Entity> getEntities() {
+       return field_217498_x.values().stream();
+   }
 }
