--- a/net/minecraft/world/chunk/ChunkPrimer.java
+++ b/net/minecraft/world/chunk/ChunkPrimer.java
@@ -1,5 +1,8 @@
 package net.minecraft.world.chunk;
 
+import ca.spottedleaf.starlight.common.chunk.ExtendedChunk;
+import ca.spottedleaf.starlight.common.light.SWMRNibbleArray;
+import ca.spottedleaf.starlight.common.light.StarLightEngine;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -38,8 +41,9 @@
 import net.minecraft.world.lighting.WorldLightManager;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.spongepowered.asm.mixin.Unique;
 
-public class ChunkPrimer implements IChunk {
+public class ChunkPrimer implements IChunk, ExtendedChunk {
    private static final Logger field_201653_a = LogManager.getLogger();
    private final ChunkPos field_201654_b;
    private volatile boolean field_201655_c;
@@ -64,6 +68,40 @@
    private final Map<GenerationStage.Carving, BitSet> field_205769_s = new Object2ObjectArrayMap<>();
    private volatile boolean field_217335_u;
 
+   private volatile SWMRNibbleArray[] blockNibbles;
+   private volatile SWMRNibbleArray[] skyNibbles;
+   private volatile boolean[] emptinessMap;
+
+   @Override
+   public SWMRNibbleArray[] getBlockNibbles() {
+      return this.blockNibbles;
+   }
+
+   @Override
+   public void setBlockNibbles(final SWMRNibbleArray[] nibbles) {
+      this.blockNibbles = nibbles;
+   }
+
+   @Override
+   public SWMRNibbleArray[] getSkyNibbles() {
+      return this.skyNibbles;
+   }
+
+   @Override
+   public void setSkyNibbles(final SWMRNibbleArray[] nibbles) {
+      this.skyNibbles = nibbles;
+   }
+
+   @Override
+   public boolean[] getEmptinessMap() {
+      return this.emptinessMap;
+   }
+
+   @Override
+   public void setEmptinessMap(final boolean[] emptinessMap) {
+      this.emptinessMap = emptinessMap;
+   }
+
    public ChunkPrimer(ChunkPos p_i48700_1_, UpgradeData p_i48700_2_) {
       this(p_i48700_1_, p_i48700_2_, (ChunkSection[])null, new ChunkPrimerTickList<>((p_205332_0_) -> {
          return p_205332_0_ == null || p_205332_0_.func_176223_P().func_196958_f();
@@ -84,6 +122,8 @@
             field_201653_a.warn("Could not set level chunk sections, array length is {} instead of {}", p_i49941_3_.length, this.field_201661_i.length);
          }
       }
+      this.blockNibbles = StarLightEngine.getFilledEmptyLight();
+      this.skyNibbles = StarLightEngine.getFilledEmptyLight();
 
    }
 
@@ -138,13 +178,13 @@
          if (this.field_201661_i[j >> 4] == Chunk.field_186036_a && p_177436_2_.func_203425_a(Blocks.field_150350_a)) {
             return p_177436_2_;
          } else {
-            if (p_177436_2_.func_185906_d() > 0) {
+            if (p_177436_2_.getLightValue(this, p_177436_1_) > 0) {
                this.field_201663_k.add(new BlockPos((i & 15) + this.func_76632_l().func_180334_c(), j, (k & 15) + this.func_76632_l().func_180333_d()));
             }
 
             ChunkSection chunksection = this.func_217332_a(j >> 4);
             BlockState blockstate = chunksection.func_222629_a(i & 15, j & 15, k & 15, p_177436_2_);
-            if (this.field_201658_f.func_209003_a(ChunkStatus.field_222613_i) && p_177436_2_ != blockstate && (p_177436_2_.func_200016_a(this, p_177436_1_) != blockstate.func_200016_a(this, p_177436_1_) || p_177436_2_.func_185906_d() != blockstate.func_185906_d() || p_177436_2_.func_215691_g() || blockstate.func_215691_g())) {
+            if (this.field_201658_f.func_209003_a(ChunkStatus.field_222613_i) && p_177436_2_ != blockstate && (p_177436_2_.func_200016_a(this, p_177436_1_) != blockstate.func_200016_a(this, p_177436_1_) || p_177436_2_.getLightValue(this, p_177436_1_) != blockstate.getLightValue(this, p_177436_1_) || p_177436_2_.func_215691_g() || blockstate.func_215691_g())) {
                WorldLightManager worldlightmanager = this.func_217307_e();
                worldlightmanager.func_215568_a(p_177436_1_);
             }
