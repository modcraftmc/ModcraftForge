--- a/net/minecraft/world/Explosion.java
+++ b/net/minecraft/world/Explosion.java
@@ -1,9 +1,11 @@
 package net.minecraft.world;
 
+import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import com.mojang.datafixers.util.Pair;
+import fr.modcraftmc.modcraftforge.paper.EntitySelector;
 import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import java.util.Collections;
 import java.util.List;
@@ -54,6 +56,7 @@
    private DamageSource field_199593_j;
    private final List<BlockPos> field_77281_g = Lists.newArrayList();
    private final Map<PlayerEntity, Vec3d> field_77288_k = Maps.newHashMap();
+   private final Vec3d position;
 
    @OnlyIn(Dist.CLIENT)
    public Explosion(World p_i45752_1_, @Nullable Entity p_i45752_2_, double p_i45752_3_, double p_i45752_5_, double p_i45752_7_, float p_i45752_9_, List<BlockPos> p_i45752_10_) {
@@ -76,6 +79,7 @@
       this.field_77286_a = p_i50007_10_;
       this.field_222260_b = p_i50007_11_;
       this.field_199593_j = DamageSource.func_94539_a(this);
+      this.position = new Vec3d(this.field_77284_b, this.field_77285_c, this.field_77282_d);
    }
 
    public static float func_222259_a(Vec3d p_222259_0_, Entity p_222259_1_) {
@@ -111,7 +115,94 @@
       }
    }
 
+   private float getPaperBlockDensity(Vec3d vec3d, Entity entity) {
+
+      CacheKey key = new CacheKey(this, entity.func_174813_aQ());
+      Float blockDensity = this.field_77287_j.explosionDensityCache.get(key);
+      if (blockDensity == null) {
+         blockDensity = func_222259_a(vec3d, entity);
+         this.field_77287_j.explosionDensityCache.put(key, blockDensity);
+      }
+
+      return blockDensity;
+   }
+
+   static class CacheKey {
+      private final World world;
+      private final double posX, posY, posZ;
+      private final double minX, minY, minZ;
+      private final double maxX, maxY, maxZ;
+
+      public CacheKey(Explosion explosion, AxisAlignedBB aabb) {
+         this.world = explosion.field_77287_j;
+         this.posX = explosion.field_77284_b;
+         this.posY = explosion.field_77285_c;
+         this.posZ = explosion.field_77282_d;
+         this.minX = aabb.field_72340_a;
+         this.minY = aabb.field_72338_b;
+         this.minZ = aabb.field_72339_c;
+         this.maxX = aabb.field_72336_d;
+         this.maxY = aabb.field_72337_e;
+         this.maxZ = aabb.field_72334_f;
+      }
+
+      @Override
+      public boolean equals(Object o) {
+         if (this == o) return true;
+         if (o == null || getClass() != o.getClass()) return false;
+
+         CacheKey cacheKey = (CacheKey) o;
+
+         if (Double.compare(cacheKey.posX, posX) != 0) return false;
+         if (Double.compare(cacheKey.posY, posY) != 0) return false;
+         if (Double.compare(cacheKey.posZ, posZ) != 0) return false;
+         if (Double.compare(cacheKey.minX, minX) != 0) return false;
+         if (Double.compare(cacheKey.minY, minY) != 0) return false;
+         if (Double.compare(cacheKey.minZ, minZ) != 0) return false;
+         if (Double.compare(cacheKey.maxX, maxX) != 0) return false;
+         if (Double.compare(cacheKey.maxY, maxY) != 0) return false;
+         if (Double.compare(cacheKey.maxZ, maxZ) != 0) return false;
+         return world.equals(cacheKey.world);
+      }
+
+      @Override
+      public int hashCode() {
+         int result;
+         long temp;
+         result = world.hashCode();
+         temp = Double.doubleToLongBits(posX);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(posY);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(posZ);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(minX);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(minY);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(minZ);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(maxX);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(maxY);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         temp = Double.doubleToLongBits(maxZ);
+         result = 31 * result + (int) (temp ^ (temp >>> 32));
+         return result;
+      }
+   }
+   // Paper end
+
+
+
    public void func_77278_a() {
+
+      // CraftBukkit start
+      if (this.field_77280_f < 0.1F) {
+         return;
+      }
+      // CraftBukkit end
+
       Set<BlockPos> set = Sets.newHashSet();
       int i = 16;
 
@@ -135,8 +226,8 @@
                      BlockPos blockpos = new BlockPos(d4, d6, d8);
                      BlockState blockstate = this.field_77287_j.func_180495_p(blockpos);
                      IFluidState ifluidstate = this.field_77287_j.func_204610_c(blockpos);
-                     if (!blockstate.func_196958_f() || !ifluidstate.func_206888_e()) {
-                        float f2 = Math.max(blockstate.func_177230_c().func_149638_a(), ifluidstate.func_210200_l());
+                     if (!blockstate.isAir(this.field_77287_j, blockpos) || !ifluidstate.func_206888_e()) {
+                        float f2 = Math.max(blockstate.getExplosionResistance(this.field_77287_j, blockpos, field_77283_e, this), ifluidstate.getExplosionResistance(this.field_77287_j, blockpos, field_77283_e, this));
                         if (this.field_77283_e != null) {
                            f2 = this.field_77283_e.func_180428_a(this, this.field_77287_j, blockpos, blockstate, ifluidstate, f2);
                         }
@@ -165,7 +256,15 @@
       int i1 = MathHelper.func_76128_c(this.field_77285_c + (double)f3 + 1.0D);
       int j2 = MathHelper.func_76128_c(this.field_77282_d - (double)f3 - 1.0D);
       int j1 = MathHelper.func_76128_c(this.field_77282_d + (double)f3 + 1.0D);
-      List<Entity> list = this.field_77287_j.func_72839_b(this.field_77283_e, new AxisAlignedBB((double)k1, (double)i2, (double)j2, (double)l1, (double)i1, (double)j1));
+      /*
+      List<Entity> list = this.world.getEntitiesWithinAABBExcludingEntity(this.exploder, new AxisAlignedBB((double)k1, (double)i2, (double)j2, (double)l1, (double)i1, (double)j1));
+
+       */
+      // Paper start - Fix lag from explosions processing dead entities
+      List<Entity> list = this.field_77287_j.func_175674_a(this.field_77283_e, new AxisAlignedBB((double) k1, (double) i2, (double) j2, (double) l1, (double) i1, (double) j1), (Predicate<Entity>) entity -> EntitySelector.canAITarget().test(entity) && entity.func_70089_S());
+      // Paper end
+
+      net.minecraftforge.event.ForgeEventFactory.onExplosionDetonate(this.field_77287_j, this, list, f3);
       Vec3d vec3d = new Vec3d(this.field_77284_b, this.field_77285_c, this.field_77282_d);
 
       for(int k2 = 0; k2 < list.size(); ++k2) {
@@ -181,7 +280,7 @@
                   d5 = d5 / d13;
                   d7 = d7 / d13;
                   d9 = d9 / d13;
-                  double d14 = (double)func_222259_a(vec3d, entity);
+                  double d14 = (double)getPaperBlockDensity(vec3d, entity); //paper optimise explosion
                   double d10 = (1.0D - d12) * d14;
                   entity.func_70097_a(this.func_199591_b(), (float)((int)((d10 * d10 + d10) / 2.0D * 7.0D * (double)f3 + 1.0D)));
                   double d11 = d10;
@@ -224,11 +323,11 @@
          for(BlockPos blockpos : this.field_77281_g) {
             BlockState blockstate = this.field_77287_j.func_180495_p(blockpos);
             Block block = blockstate.func_177230_c();
-            if (!blockstate.func_196958_f()) {
+            if (!blockstate.isAir(this.field_77287_j, blockpos)) {
                BlockPos blockpos1 = blockpos.func_185334_h();
                this.field_77287_j.func_217381_Z().func_76320_a("explosion_blocks");
-               if (block.func_149659_a(this) && this.field_77287_j instanceof ServerWorld) {
-                  TileEntity tileentity = block.func_149716_u() ? this.field_77287_j.func_175625_s(blockpos) : null;
+               if (blockstate.canDropFromExplosion(this.field_77287_j, blockpos, this) && this.field_77287_j instanceof ServerWorld) {
+                  TileEntity tileentity = blockstate.hasTileEntity() ? this.field_77287_j.func_175625_s(blockpos) : null;
                   LootContext.Builder lootcontext$builder = (new LootContext.Builder((ServerWorld)this.field_77287_j)).func_216023_a(this.field_77287_j.field_73012_v).func_216015_a(LootParameters.field_216286_f, blockpos).func_216015_a(LootParameters.field_216289_i, ItemStack.field_190927_a).func_216021_b(LootParameters.field_216288_h, tileentity).func_216021_b(LootParameters.field_216281_a, this.field_77283_e);
                   if (this.field_222260_b == Explosion.Mode.DESTROY) {
                      lootcontext$builder.func_216015_a(LootParameters.field_216290_j, this.field_77280_f);
@@ -239,8 +338,7 @@
                   });
                }
 
-               this.field_77287_j.func_180501_a(blockpos, Blocks.field_150350_a.func_176223_P(), 3);
-               block.func_180652_a(this.field_77287_j, blockpos, this);
+               blockstate.onBlockExploded(this.field_77287_j, blockpos, this);
                this.field_77287_j.func_217381_Z().func_76319_b();
             }
          }
@@ -311,6 +409,10 @@
       return this.field_77281_g;
    }
 
+   public Vec3d getPosition() {
+      return this.position;
+   }
+
    public static enum Mode {
       NONE,
       BREAK,
